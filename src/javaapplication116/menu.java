/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javaapplication116;

import java.awt.GraphicsEnvironment;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Suazo
 */
public class menu extends javax.swing.JFrame {

    /**
     * Creates new form menu
     */
    public menu() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jf_nuevoCampo = new javax.swing.JFrame();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jtf_nombreCampo = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jcb_tipoCampo = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        js_tamanoCampo = new javax.swing.JSpinner();
        jcb_llaveCampo = new javax.swing.JCheckBox();
        jb_aceptarCampo = new javax.swing.JButton();
        jb_cancelarCampo = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jm_file = new javax.swing.JMenu();
        jmi_nuevoArchivo = new javax.swing.JMenuItem();
        jmi_abrirArchivo = new javax.swing.JMenuItem();
        jmi_guardarArchivo = new javax.swing.JMenuItem();
        jmi_cerrarArchivo = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jmi_salir = new javax.swing.JMenuItem();
        jm_entry = new javax.swing.JMenu();
        jmi_agregarRegistro = new javax.swing.JMenuItem();
        jmi_eliminarRegistro = new javax.swing.JMenuItem();
        jm_edit = new javax.swing.JMenu();
        jmi_crearCampo = new javax.swing.JMenuItem();
        jmi_modificarCampo = new javax.swing.JMenuItem();
        jmi_eliminarCampo = new javax.swing.JMenuItem();

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Nuevo Campo");

        jLabel2.setText("Nombre");

        jLabel3.setText("Tipo");

        jcb_tipoCampo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "String", "Char", "Integer", "Double", "Float", "Long", "Short", "Byte", "Object" }));

        jLabel4.setText("Tama√±o");

        js_tamanoCampo.setModel(new javax.swing.SpinnerNumberModel(1, 1, 100, 1));

        jcb_llaveCampo.setText("Llave Primaria");

        jb_aceptarCampo.setText("Aceptar");
        jb_aceptarCampo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_aceptarCampoActionPerformed(evt);
            }
        });

        jb_cancelarCampo.setText("Cancelar");
        jb_cancelarCampo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_cancelarCampoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jf_nuevoCampoLayout = new javax.swing.GroupLayout(jf_nuevoCampo.getContentPane());
        jf_nuevoCampo.getContentPane().setLayout(jf_nuevoCampoLayout);
        jf_nuevoCampoLayout.setHorizontalGroup(
            jf_nuevoCampoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jf_nuevoCampoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jf_nuevoCampoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jcb_tipoCampo, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jtf_nombreCampo)
                    .addComponent(js_tamanoCampo)
                    .addGroup(jf_nuevoCampoLayout.createSequentialGroup()
                        .addGroup(jf_nuevoCampoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jcb_llaveCampo)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addGroup(jf_nuevoCampoLayout.createSequentialGroup()
                                .addComponent(jb_aceptarCampo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jb_cancelarCampo)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jf_nuevoCampoLayout.setVerticalGroup(
            jf_nuevoCampoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jf_nuevoCampoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtf_nombreCampo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jcb_tipoCampo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(js_tamanoCampo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jcb_llaveCampo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jf_nuevoCampoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jb_aceptarCampo)
                    .addComponent(jb_cancelarCampo))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Proyecto EDD2");

        jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTable);

        jm_file.setText("Archivo");

        jmi_nuevoArchivo.setText("Nuevo Archio");
        jmi_nuevoArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmi_nuevoArchivoActionPerformed(evt);
            }
        });
        jm_file.add(jmi_nuevoArchivo);

        jmi_abrirArchivo.setText("Abrir Archivo");
        jmi_abrirArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmi_abrirArchivoActionPerformed(evt);
            }
        });
        jm_file.add(jmi_abrirArchivo);

        jmi_guardarArchivo.setText("Guardar Archivo");
        jmi_guardarArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmi_guardarArchivoActionPerformed(evt);
            }
        });
        jm_file.add(jmi_guardarArchivo);

        jmi_cerrarArchivo.setText("Cerrar Archivo");
        jmi_cerrarArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmi_cerrarArchivoActionPerformed(evt);
            }
        });
        jm_file.add(jmi_cerrarArchivo);
        jm_file.add(jSeparator1);

        jmi_salir.setText("Salir");
        jm_file.add(jmi_salir);

        jMenuBar1.add(jm_file);

        jm_entry.setText("Registros");

        jmi_agregarRegistro.setText("Agregar Registro");
        jmi_agregarRegistro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmi_agregarRegistroActionPerformed(evt);
            }
        });
        jm_entry.add(jmi_agregarRegistro);

        jmi_eliminarRegistro.setText("Eliminar Registro");
        jm_entry.add(jmi_eliminarRegistro);

        jMenuBar1.add(jm_entry);

        jm_edit.setText("Campos");

        jmi_crearCampo.setText("Crear Campo");
        jmi_crearCampo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmi_crearCampoActionPerformed(evt);
            }
        });
        jm_edit.add(jmi_crearCampo);

        jmi_modificarCampo.setText("Modificar Campo");
        jm_edit.add(jmi_modificarCampo);

        jmi_eliminarCampo.setText("Eliminar Campo");
        jm_edit.add(jmi_eliminarCampo);

        jMenuBar1.add(jm_edit);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 786, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 467, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    File file;
    boolean openFile = false;
    ArrayList<campo> campos = new ArrayList();
    char[] metaDatos = new char[500];

    private void actualizarTabla() {
        DefaultTableModel tableModel = new DefaultTableModel();
        for (campo campoActual : campos) {
            tableModel.addColumn(campoActual.getNombre());
        }
        jTable.setModel(tableModel);
    }

    private void nuevoArchivo() {
        JFileChooser jfc = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("TEXT FILES", "txt", "text");
        jfc.setFileFilter(filter);
        jfc.showOpenDialog(null);
        file = jfc.getSelectedFile();
        String aux = file.getAbsolutePath();
        if (!aux.endsWith(".txt")) {
            aux += ".txt";
        }
        file = new File(aux);
        try {
            if (file != null) {
                if (file.toPath().toString().endsWith(".txt")) {
                    if (!file.exists()) {
                        file.createNewFile();
                    }
                    openFile = true;
                } else {
                    JOptionPane.showMessageDialog(this, "El tipo de archivo ingresado es invalido.");
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void escribirArchivo() {

        try {
            if (!openFile) {
                JOptionPane.showMessageDialog(this, "No hay archivo abierto.");
                return;
            }
            FileWriter writer = new FileWriter(file, false);
            BufferedWriter bw = new BufferedWriter(writer);

            String buffer = "";

            for (campo campoActual : campos) {
                buffer += campoActual.toStringFile();
            }
            int spaces = 500 - buffer.length();
            for (int i = 0; i < spaces; i++) {
                buffer += " ";
            }
            bw.write(buffer);
            bw.flush();
            bw.close();
        } catch (Exception e) {
            e.printStackTrace();
            return;
        }
    }

    private void cargarArchivo() {
        try {
            if (openFile) {
                int input = JOptionPane.showConfirmDialog(this, "Desea guardar el archivo antes de cargar?");
                if (input == 0) {

                } else if (input == 2) {
                    return;
                }
            }
            JFileChooser jfc = new JFileChooser();
            FileNameExtensionFilter filter = new FileNameExtensionFilter("TEXT FILES", "txt", "text");
            jfc.setFileFilter(filter);
            jfc.showOpenDialog(null);
            file = jfc.getSelectedFile();
            openFile = true;
            FileReader reader = new FileReader(file);
            BufferedReader br = new BufferedReader(reader);
            char[] line = new char[500];
            br.read(line, 0, 500);
            String linestr = new String(line);
            String[] camposstr = linestr.split(":");

            ArrayList<campo> tempCampos = new ArrayList();

            for (int i = 0; i < camposstr.length - 1; i++) {
                String[] camposCampo = camposstr[i].split(";");
                String nombre = camposCampo[0];
                String tipo = camposCampo[1];
                int largo = Integer.parseInt(camposCampo[2]);
                boolean llave = camposCampo[3].equals("true");
                campo tempCampo = new campo(tipo, nombre, largo, llave);
                tempCampos.add(tempCampo);
            }
            campos = tempCampos;
            br.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void jmi_nuevoArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmi_nuevoArchivoActionPerformed
        nuevoArchivo();
        actualizarTabla();
    }//GEN-LAST:event_jmi_nuevoArchivoActionPerformed

    private void jmi_crearCampoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmi_crearCampoActionPerformed
        jf_nuevoCampo.pack();
        jf_nuevoCampo.setLocationRelativeTo(this);
        jf_nuevoCampo.setVisible(true);
    }//GEN-LAST:event_jmi_crearCampoActionPerformed

    private void jb_aceptarCampoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_aceptarCampoActionPerformed
        String nombre = jtf_nombreCampo.getText();
        String tipo = (String) jcb_tipoCampo.getSelectedItem();
        int tamano = (int) js_tamanoCampo.getValue();
        boolean llave = jcb_llaveCampo.isSelected();
        if (!nombre.isEmpty()) {
            campo nuevoCampo = new campo(tipo, nombre, tamano, llave);
            campos.add(nuevoCampo);
            jtf_nombreCampo.setText("");
            jcb_tipoCampo.setSelectedItem("String");
            js_tamanoCampo.setValue(1);
            jcb_llaveCampo.setSelected(false);

            jf_nuevoCampo.setVisible(false);
            actualizarTabla();
            JOptionPane.showMessageDialog(this, "Campo agregado exitosamente");
        } else {
            JOptionPane.showMessageDialog(this, "El nombre esta vac√≠o.");
        }
    }//GEN-LAST:event_jb_aceptarCampoActionPerformed

    private void jb_cancelarCampoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_cancelarCampoActionPerformed
        jtf_nombreCampo.setText("");
        jcb_tipoCampo.setSelectedItem("String");
        js_tamanoCampo.setValue(1);
        jcb_llaveCampo.setSelected(false);

        jf_nuevoCampo.setVisible(false);
    }//GEN-LAST:event_jb_cancelarCampoActionPerformed

    private void jmi_abrirArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmi_abrirArchivoActionPerformed
        cargarArchivo();
        actualizarTabla();
    }//GEN-LAST:event_jmi_abrirArchivoActionPerformed

    private void jmi_guardarArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmi_guardarArchivoActionPerformed
        escribirArchivo();
        JOptionPane.showMessageDialog(this, "Archivo guardado exitosamente");
    }//GEN-LAST:event_jmi_guardarArchivoActionPerformed

    private void jmi_cerrarArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmi_cerrarArchivoActionPerformed
        file = null;
        openFile = false;
        jTable.setModel(new DefaultTableModel());
        JOptionPane.showMessageDialog(this, "Archivo cerrado exitosamente");
    }//GEN-LAST:event_jmi_cerrarArchivoActionPerformed

    private void jmi_agregarRegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmi_agregarRegistroActionPerformed
        try {
            BufferedReader br = new BufferedReader(new FileReader(file));
            if (br.ready()) {
                metaDatos = new char[500];
                br.read(metaDatos, 0, 500);
                String linestr = new String(metaDatos);
                String[] camposstr = linestr.split(":");
                

            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(menu.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(menu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jmi_agregarRegistroActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new menu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JTable jTable;
    private javax.swing.JButton jb_aceptarCampo;
    private javax.swing.JButton jb_cancelarCampo;
    private javax.swing.JCheckBox jcb_llaveCampo;
    private javax.swing.JComboBox<String> jcb_tipoCampo;
    private javax.swing.JFrame jf_nuevoCampo;
    private javax.swing.JMenu jm_edit;
    private javax.swing.JMenu jm_entry;
    private javax.swing.JMenu jm_file;
    private javax.swing.JMenuItem jmi_abrirArchivo;
    private javax.swing.JMenuItem jmi_agregarRegistro;
    private javax.swing.JMenuItem jmi_cerrarArchivo;
    private javax.swing.JMenuItem jmi_crearCampo;
    private javax.swing.JMenuItem jmi_eliminarCampo;
    private javax.swing.JMenuItem jmi_eliminarRegistro;
    private javax.swing.JMenuItem jmi_guardarArchivo;
    private javax.swing.JMenuItem jmi_modificarCampo;
    private javax.swing.JMenuItem jmi_nuevoArchivo;
    private javax.swing.JMenuItem jmi_salir;
    private javax.swing.JSpinner js_tamanoCampo;
    private javax.swing.JTextField jtf_nombreCampo;
    // End of variables declaration//GEN-END:variables
}
